{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    error: null\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      //new item\n      const newItem = action.payload;\n      //existingitem\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      //whenever user adding the item the total quantity will increase\n      state.totalQuantity++;\n      //if the item is does not exist it will push the newitem into the state\n      if (!existingItem) {\n        state.items.push(newItem);\n      } else {\n        //if the item is already exist it will increase the quantity and price\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      //Getting the id\n      const id = action.payload;\n      //Existing item\n      const existingItem = state.items.find(item => item.id === id);\n      //whenever user removing the item the total quantity will decrease\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        //if already existing item quantity is 1 means i have to remove the item from existing item\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        //if the item is already exist it will decrease the quantity and price\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n    delItemFromCart(state, action) {\n      //Getting the id\n      const id = action.payload;\n      //Checking whether the item is in existing item or not\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        //if it's true i have to delete item from my existingitems and also i have to decrease the quantity\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n        state.items = state.items.filter(item => item.id !== id);\n      }\n    },\n    //for get the error\n    error(state, action) {\n      state.error = action.payload;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","error","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","quantity","totalPrice","price","removeItemFromCart","filter","delItemFromCart","cartActions","actions"],"sources":["C:/Users/emertxe/Desktop/MERN_ORDERIT/MERN-FoodOrder/Frontend/src/store/cart/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: { items: [], totalQuantity: 0, error: null },\r\n  reducers: {\r\n    addItemToCart(state, action) {\r\n      //new item\r\n      const newItem = action.payload;\r\n      //existingitem\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n      //whenever user adding the item the total quantity will increase\r\n      state.totalQuantity++;\r\n      //if the item is does not exist it will push the newitem into the state\r\n      if (!existingItem) {\r\n        state.items.push(newItem);\r\n      } else {\r\n        //if the item is already exist it will increase the quantity and price\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart(state, action) {\r\n      //Getting the id\r\n      const id = action.payload;\r\n      //Existing item\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      //whenever user removing the item the total quantity will decrease\r\n      state.totalQuantity--;\r\n      if (existingItem.quantity === 1) {\r\n        //if already existing item quantity is 1 means i have to remove the item from existing item\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        //if the item is already exist it will decrease the quantity and price\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n    delItemFromCart(state, action) {\r\n      //Getting the id\r\n      const id = action.payload;\r\n      //Checking whether the item is in existing item or not\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n      if (existingItem) {\r\n        //if it's true i have to delete item from my existingitems and also i have to decrease the quantity\r\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      }\r\n    },\r\n    //for get the error\r\n    error(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC;EAC1DC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B;MACA,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACvE;MACAP,KAAK,CAACJ,aAAa,EAAE;MACrB;MACA,IAAI,CAACQ,YAAY,EAAE;QACjBJ,KAAK,CAACL,KAAK,CAACa,IAAI,CAACN,OAAO,CAAC;MAC3B,CAAC,MAAM;QACL;QACAE,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACM,UAAU,GAAGN,YAAY,CAACM,UAAU,GAAGR,OAAO,CAACS,KAAK;MACnE;IACF,CAAC;IACDC,kBAAkBA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAChC;MACA,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/D;MACAP,KAAK,CAACJ,aAAa,EAAE;MACrB,IAAIQ,YAAY,CAACK,QAAQ,KAAK,CAAC,EAAE;QAC/B;QACAT,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACL;QACAH,YAAY,CAACK,QAAQ,EAAE;QACvBL,YAAY,CAACM,UAAU,GAAGN,YAAY,CAACM,UAAU,GAAGN,YAAY,CAACO,KAAK;MACxE;IACF,CAAC;IACDG,eAAeA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAC7B;MACA,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAK,CAACU,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIH,YAAY,EAAE;QAChB;QACAJ,KAAK,CAACJ,aAAa,GAAGI,KAAK,CAACJ,aAAa,GAAGQ,YAAY,CAACK,QAAQ;QACjET,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACkB,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D;IACF,CAAC;IACD;IACAV,KAAKA,CAACG,KAAK,EAAEC,MAAM,EAAE;MACnBD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACE,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMY,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAE5C,eAAexB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
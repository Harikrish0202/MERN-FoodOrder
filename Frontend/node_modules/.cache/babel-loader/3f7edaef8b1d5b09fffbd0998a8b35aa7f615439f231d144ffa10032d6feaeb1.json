{"ast":null,"code":"import { restaurantAction } from \"./restaurant-slice\";\nimport axios from \"axios\";\nexport const restaurantsData = () => {\n  return async dispatch => {\n    const fetchRestaurantsData = async () => {\n      const response = await axios.get(\"/api/v1/eats/stores\");\n      if (!response) {\n        throw new Error(\"Could not fetch RestaurantData data!\");\n      }\n      const data = await response.data;\n      return data;\n    };\n    try {\n      const resData = await fetchRestaurantsData();\n      dispatch(restaurantAction.getRestaurant({\n        restaurant: resData.data || []\n      }));\n    } catch (error) {\n      throw new Error(\"Could not fetch Restaurant data!\");\n    }\n  };\n};\n\n// export const specifyresData = () => {\n//   return async (dispatch) => {\n//     const getspecifyRestaurant = async () => {\n//       const name = \"Hotel Empire\";\n//       const response = await axios.get(`/api/v1/eats/stores/${name}`);\n\n//       if (!response) {\n//         throw new Error(\"Could not fetch RestaurantData data!\");\n//       }\n//       const data = await response.data;\n//       return data;\n//     };\n\n//     try {\n//       const resData = await getspecifyRestaurant();\n//       dispatch(\n//         restaurantAction.specifyRestaurant({\n//           restaurant: resData.data,\n//         })\n//       );\n//     } catch (error) {\n//       throw new Error(\"Could not fetch Restaurant data!\");\n//     }\n//   };\n// };","map":{"version":3,"names":["restaurantAction","axios","restaurantsData","dispatch","fetchRestaurantsData","response","get","Error","data","resData","getRestaurant","restaurant","error"],"sources":["C:/Users/emertxe/Desktop/MERN_ORDERIT/MERN-FoodOrder/Frontend/src/store/restaurants/restaurant-action.js"],"sourcesContent":["import { restaurantAction } from \"./restaurant-slice\";\r\nimport axios from \"axios\";\r\n\r\nexport const restaurantsData = () => {\r\n  return async (dispatch) => {\r\n    const fetchRestaurantsData = async () => {\r\n      const response = await axios.get(\"/api/v1/eats/stores\");\r\n      if (!response) {\r\n        throw new Error(\"Could not fetch RestaurantData data!\");\r\n      }\r\n      const data = await response.data;\r\n      return data;\r\n    };\r\n\r\n    try {\r\n      const resData = await fetchRestaurantsData();\r\n      dispatch(\r\n        restaurantAction.getRestaurant({\r\n          restaurant: resData.data || [],\r\n        })\r\n      );\r\n    } catch (error) {\r\n      throw new Error(\"Could not fetch Restaurant data!\");\r\n    }\r\n  };\r\n};\r\n\r\n// export const specifyresData = () => {\r\n//   return async (dispatch) => {\r\n//     const getspecifyRestaurant = async () => {\r\n//       const name = \"Hotel Empire\";\r\n//       const response = await axios.get(`/api/v1/eats/stores/${name}`);\r\n\r\n//       if (!response) {\r\n//         throw new Error(\"Could not fetch RestaurantData data!\");\r\n//       }\r\n//       const data = await response.data;\r\n//       return data;\r\n//     };\r\n\r\n//     try {\r\n//       const resData = await getspecifyRestaurant();\r\n//       dispatch(\r\n//         restaurantAction.specifyRestaurant({\r\n//           restaurant: resData.data,\r\n//         })\r\n//       );\r\n//     } catch (error) {\r\n//       throw new Error(\"Could not fetch Restaurant data!\");\r\n//     }\r\n//   };\r\n// };\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,qBAAqB,CAAC;MACvD,IAAI,CAACD,QAAQ,EAAE;QACb,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC;MACzD;MACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI;MAChC,OAAOA,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAMC,OAAO,GAAG,MAAML,oBAAoB,CAAC,CAAC;MAC5CD,QAAQ,CACNH,gBAAgB,CAACU,aAAa,CAAC;QAC7BC,UAAU,EAAEF,OAAO,CAACD,IAAI,IAAI;MAC9B,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAM,IAAIL,KAAK,CAAC,kCAAkC,CAAC;IACrD;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
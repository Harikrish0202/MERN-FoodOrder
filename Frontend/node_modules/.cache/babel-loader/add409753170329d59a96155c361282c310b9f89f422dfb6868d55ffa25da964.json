{"ast":null,"code":"import { restaurantAction } from \"./restaurant-slice\";\nimport axios from \"axios\";\nexport const restaurantsData = () => async dispatch => {\n  const fetchRestaurantsData = async () => {\n    dispatch(restaurantAction.getrequest());\n    const response = await axios.get(\"/api/v1/eats/stores\");\n    if (!response) {\n      throw new Error(\"Could not fetch RestaurantData data!\");\n    }\n    const data = await response.data;\n    return data;\n  };\n  try {\n    const resData = await fetchRestaurantsData();\n    dispatch(restaurantAction.getRestaurant({\n      restaurant: resData.data || []\n    }));\n  } catch (error) {\n    throw new Error(\"Could not fetch Restaurant data!\");\n  }\n};\n\n// export const specifyresData = () =>\n//   async (dispatch) => {\n//     const getspecifyRestaurant = async () => {\n//       const name = \"Hotel Empire\";\n//       const response = await axios.get(`/api/v1/eats/stores/${name}`);\n\n//       if (!response) {\n//         throw new Error(\"Could not fetch RestaurantData data!\");\n//       }\n//       const data = await response.data;\n//       return data;\n//     };\n\n//     try {\n//       const resData = await getspecifyRestaurant();\n//       dispatch(\n//         restaurantAction.specifyRestaurant({\n//           restaurant: resData.data,\n//         })\n//       );\n//     } catch (error) {\n//       throw new Error(\"Could not fetch Restaurant data!\");\n//     }\n//\n// };","map":{"version":3,"names":["restaurantAction","axios","restaurantsData","dispatch","fetchRestaurantsData","getrequest","response","get","Error","data","resData","getRestaurant","restaurant","error"],"sources":["C:/Users/lenovo/Desktop/MERN_OREDERIT/MERN-FoodOrder/Frontend/src/store/restaurants/restaurant-action.js"],"sourcesContent":["import { restaurantAction } from \"./restaurant-slice\";\r\nimport axios from \"axios\";\r\n\r\nexport const restaurantsData = () => async (dispatch) => {\r\n  const fetchRestaurantsData = async () => {\r\n    dispatch(restaurantAction.getrequest());\r\n    const response = await axios.get(\"/api/v1/eats/stores\");\r\n    if (!response) {\r\n      throw new Error(\"Could not fetch RestaurantData data!\");\r\n    }\r\n    const data = await response.data;\r\n    return data;\r\n  };\r\n\r\n  try {\r\n    const resData = await fetchRestaurantsData();\r\n    dispatch(\r\n      restaurantAction.getRestaurant({\r\n        restaurant: resData.data || [],\r\n      })\r\n    );\r\n  } catch (error) {\r\n    throw new Error(\"Could not fetch Restaurant data!\");\r\n  }\r\n};\r\n\r\n// export const specifyresData = () =>\r\n//   async (dispatch) => {\r\n//     const getspecifyRestaurant = async () => {\r\n//       const name = \"Hotel Empire\";\r\n//       const response = await axios.get(`/api/v1/eats/stores/${name}`);\r\n\r\n//       if (!response) {\r\n//         throw new Error(\"Could not fetch RestaurantData data!\");\r\n//       }\r\n//       const data = await response.data;\r\n//       return data;\r\n//     };\r\n\r\n//     try {\r\n//       const resData = await getspecifyRestaurant();\r\n//       dispatch(\r\n//         restaurantAction.specifyRestaurant({\r\n//           restaurant: resData.data,\r\n//         })\r\n//       );\r\n//     } catch (error) {\r\n//       throw new Error(\"Could not fetch Restaurant data!\");\r\n//     }\r\n//\r\n// };\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACvD,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvCD,QAAQ,CAACH,gBAAgB,CAACK,UAAU,CAAC,CAAC,CAAC;IACvC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,qBAAqB,CAAC;IACvD,IAAI,CAACD,QAAQ,EAAE;MACb,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC;IACzD;IACA,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI;IAChC,OAAOA,IAAI;EACb,CAAC;EAED,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMN,oBAAoB,CAAC,CAAC;IAC5CD,QAAQ,CACNH,gBAAgB,CAACW,aAAa,CAAC;MAC7BC,UAAU,EAAEF,OAAO,CAACD,IAAI,IAAI;IAC9B,CAAC,CACH,CAAC;EACH,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAM,IAAIL,KAAK,CAAC,kCAAkC,CAAC;EACrD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}